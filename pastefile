using System;
using System.DirectoryServices.AccountManagement;
using System.Security.Cryptography;
using System.Text;

namespace YourNamespace
{
    public partial class Login : System.Web.UI.Page
    {
        // Static secondary password
        private static readonly string staticPassword = "StaticSecretPassword";

        protected void Page_Load(object sender, EventArgs e)
        {
        }

        protected void btnLogin_Click(object sender, EventArgs e)
        {
            string domain = "YourDomain"; // Replace with your domain name
            string username = txtUsername.Text;
            string password1 = txtPassword1.Text;

            // Combine and hash the passwords
            string combinedPassword = CombineAndHashPasswords(password1, staticPassword);

            if (ValidateUser(domain, username, combinedPassword))
            {
                // Redirect to another page on successful login
                Response.Redirect("HomePage.aspx"); // Replace with your target page
            }
            else
            {
                // Show error message
                lblMessage.Text = "Invalid username or password.";
            }
        }

        private bool ValidateUser(string domain, string username, string password)
        {
            using (var context = new PrincipalContext(ContextType.Domain, domain))
            {
                return context.ValidateCredentials(username, password);
            }
        }

        private string CombineAndHashPasswords(string password1, string password2)
        {
            // Combine the passwords
            string combinedPassword = password1 + password2;

            // Hash the combined password using SHA-256
            using (SHA256 sha256 = SHA256.Create())
            {
                byte[] bytes = sha256.ComputeHash(Encoding.UTF8.GetBytes(combinedPassword));
                StringBuilder builder = new StringBuilder();
                foreach (byte b in bytes)
                {
                    builder.Append(b.ToString("x2"));
                }
                return builder.ToString();
            }
        }
    }
}
