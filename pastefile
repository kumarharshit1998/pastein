using System;
using System.ServiceModel;
using System.ServiceModel.Channels;
using System.Security.Cryptography.X509Certificates;
using System.Threading.Tasks;
using CIFSearch; // Namespace from generated Reference.cs

public class SoapClientService
{
    private readonly ClientSearchAPIClient _client;

    public SoapClientService()
    {
        // Configure binding for SOAP over HTTPS
        var binding = new BasicHttpsBinding
        {
            Security = new BasicHttpsSecurity
            {
                Mode = BasicHttpsSecurityMode.Transport
            }
        };

        var endpoint = new EndpointAddress("https://api-lms-ite.eapi02-mt.truist-tst.com/clientsearchapi-01-eapi02-ite/clientsearchapi");

        _client = new ClientSearchAPIClient(binding, endpoint);

        // Load the certificate
        var certificate = new X509Certificate2("your_cert.pfx", "your_password");

        // Attach the certificate
        _client.ClientCredentials.ClientCertificate.Certificate = certificate;
    }

    public async Task<ClientSearchReply> SearchClientAsync(string accountNumber)
    {
        var request = new ClientSearchRequest
        {
            ClientSearchType = "A",
            AccountSearch = new AccountSearch
            {
                BankNum = "",
                AccountType = "",
                AccountNumber = accountNumber
            }
        };

        return await _client.ClientSearchAsync(request);
    }
}
