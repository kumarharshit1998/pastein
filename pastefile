 using (var connection = _context.Database.GetDbConnection())
    {
        await connection.OpenAsync();
        using (var command = connection.CreateCommand())
        {
            command.CommandText = "usp_LMG_ManualAddprospect";
            command.CommandType = CommandType.StoredProcedure;

            command.Parameters.Add(new SqlParameter("@USERID", model.USERID));
            command.Parameters.Add(new SqlParameter("@AccountNo", model.AccountNo));
            command.Parameters.Add(new SqlParameter("@SSN", model.SSN));
            command.Parameters.Add(new SqlParameter("@BALANCE", model.BALANCE));
            command.Parameters.Add(new SqlParameter("@LOANLINE", model.LOANLINE));
            command.Parameters.Add(new SqlParameter("@LIENPOS", model.LIENPOS));
            command.Parameters.Add(new SqlParameter("@PRIFNAME", model.PRIFNAME));
            command.Parameters.Add(new SqlParameter("@PRILNAME", model.PRILNAME));
            command.Parameters.Add(new SqlParameter("@PRIADD1", model.PRIADD1));
            command.Parameters.Add(new SqlParameter("@PRIADD2", model.PRIADD2));
            command.Parameters.Add(new SqlParameter("@PRICITY", model.PRICITY));
            command.Parameters.Add(new SqlParameter("@PRIST", model.PRIST));
            command.Parameters.Add(new SqlParameter("@PRIZIP", model.PRIZIP));
            command.Parameters.Add(new SqlParameter("@PRIAC", model.PRIAC));
            command.Parameters.Add(new SqlParameter("@PRIPHONE", model.PRIPHONE));
            command.Parameters.Add(new SqlParameter("@OTAC", model.OTAC));
            command.Parameters.Add(new SqlParameter("@PRIOTHRPH", model.PRIOTHRPH));
            command.Parameters.Add(new SqlParameter("@COLLADD1", model.COLLADD1));
            command.Parameters.Add(new SqlParameter("@COLLADD2", model.COLLADD2));
            command.Parameters.Add(new SqlParameter("@COLLCITY", model.COLLCITY));
            command.Parameters.Add(new SqlParameter("@COLLST", model.COLLST));
            command.Parameters.Add(new SqlParameter("@COLLZIP", model.COLLZIP));

            // ✅ Correctly defining OUTPUT parameter
            var outputParam = new SqlParameter("@LMDBID", SqlDbType.BigInt)
            {
                Direction = ParameterDirection.Output
            };
            command.Parameters.Add(outputParam);

            await command.ExecuteNonQueryAsync();

            // ✅ Retrieve output value
            return outputParam.Value.ToString();
        }
    }
}
